<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:property-placeholder location='classpath:config.properties'/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.jdbcUrl}" />
        <property name="username" value="${db.user}" />
        <property name="password" value="${db.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${db.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${db.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${db.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${db.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${db.maxWaitMillis}"></property>
    </bean>


    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="nestedTransactionAllowed" value="false"/>
        <property name="defaultTimeout" value="10"/>
    </bean>

    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
        <!--ISOLATION_DEFAULT 表示由使用的数据库决定  -->
        <property name="isolationLevelName" value="ISOLATION_REPEATABLE_READ"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--
        <property name="typeAliasesPackage" value="com.ifen.web.domain"/>
        -->
        <property name="mapperLocations" value="classpath:dao/mapper/*.xml"/>
        <property name="configLocation" value="classpath:dao/sqlmap-config.xml"/>
    </bean>

    <!-- 扫描所有的Mapper -->
    <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        -->
        <property name="basePackage" value="com.ifen.web.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>
